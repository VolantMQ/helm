# Default values for home-assistant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  # image.registry -- URL to registry
  registry: docker.io
  # image.repository -- Image repository name 
  repository: volantmq/volantmq
  # image.repository -- Image repository tag 
  tag: v0.4.0-rc.6
  # image.pullPolicy -- Image repository pull policy 
  pullPolicy: IfNotPresent

## Service configuration
service:
  # service.type -- Kubernetes Service type
  type: ClusterIP
  # service.type -- Kubernetes Service annotations
  annotations: {}
  # service.type -- Kubernetes Service lavels
  labels: {}
  # service.type -- Kubernetes Service port
  port: 1883
  # service.type -- Kubernetes clusterIp if any
  clusterIP: None
  ## List of IP addresses at which the hass-configurator service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  # service.type -- Kubernetes Service externalIps
  externalIPs: []
  # service.type -- Kubernetes Service LoadBalancerIp
  loadBalancerIP: ""
  # service.type -- Kubernetes Service Load Balancer source Range
  loadBalancerSourceRanges: []
  # service.type -- Kubernetes Service publishNotReadyAddresses
  publishNotReadyAddresses: false


metrics:
  # metrics.enabled -- Enable Service Metrics
  enabled: false

#  podAnnotations:
#    prometheus.io/scrape: "true"
#    prometheus.io/port: "8080"

  # Enable this if you're using https://github.com/coreos/prometheus-operator
  serviceMonitor:
    # metrics.serviceMonitor.enabled -- Enable Service Monitor
    enabled: true
    # metrics.serviceMonitor.namespace -- Specify a namespace if needed
    namespace: prometheus
    # metrics.serviceMonitor.interval -- fallback to the prometheus default unless specified
    interval: 3s
    # metrics.serviceMonitor.scrapeTimeout -- scrapeTimeout 
    # scrapeTimeout: 10s

    selector:
      # metrics.serviceMonitor.selector.release --  prometheus operator release
      release: prometheus-operator

serviceAccount:
  # serviceAccount.create -- Specifies whether a ServiceAccount should be created
  ##
  create: false
  # serviceAccount.name -- The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:

## Persist data to a persistent volume
persistence:
  # persistence.enabled -- Enable Persisting data to a persistent volume
  enabled: true
  ## Data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  # persistence.accessMode -- Define preferred access mode
  accessMode: ReadWriteOnce
  # persistence.size -- Define volume claim size(default 8GB)
  size: 8Gi
  # persistence.annotations -- Define PV annotations
  annotations: {}

testFramework:
  # testFramework.enable -- Enable Test Framework
  enabled: true
  # testFramework.image -- Image to be used for testing of the chart
  image: "bats/bats"
  # testFramework.tag -- Image Tag for the test framework
  tag: "v1.1.0"
  # testFramework.securityContext -- define securityContext object if any
  securityContext: {}

readinessProbe:
  # readinessProbe.enable -- Enabling Readiness Probe
  enable: true
  # readinessProbe.interval -- Readiness check interval
  interval: 60
  # readinessProbe.timeout --  Define custom timeout 
  timeout: 3
  # readinessProbe.initialDelay -- Intial Delay to take in account
  initialDelay: 30
  
livenessProbe:
  # livenessProbe.enable -- Enabling Readiness Probe
  enable: false
  # livenessProbe.initialDelay -- Intial Delay to take in account
  initialDelay: 30
  # livenessProbe.timeout --  Define custom timeout 
  timeout: 1

ingress:
  # ingress.enabled -- Enable Ingress Object
  enabled: false
  # ingress.annotations -- Custom annotations for the ingress (e.g ingress.class )
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
   # ingress.labels -- Custom ingress lavels
  labels: {}
  # ingress.path -- Ingress accepted path
  path: /
  # ingress.hosts -- Ingress accepted hostnames
  hosts:
    - chart-example.local
  # ingress.extraPaths -- Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  # ingress.tls	-- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# VolantMQ config
# config -- The VolantMQ config
config: |
  system:
    log:
      console:
        level: info # available levels: debug, info, warn, error, dpanic, panic, fatal
    acceptor:
      maxIncoming: 1000
      preSpawn: 100
  plugins:
    enabled:
      - health
    config:
      health:
        - backend: health
          config:
            livenessEndpoint: live
            readinessEndpoint: ready
  auth:
    anonymous: true
    order:
      - internal
  mqtt:
    version:
      - v3.1.1
    keepAlive:
      period: 60
      force: false
    options:
      connectTimeout: 2
      offlineQoS0: true
      sessionDups: false
      retainAvail: true
      subsOverlap: false
      subsId: false
      subsShared: false
      subsWildcard: true
      receiveMax: 65535
      maxPacketSize: 268435455
      maxTopicAlias: 65535
      maxQoS: 2

